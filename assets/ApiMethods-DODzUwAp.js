import{f as c,a as r,b as e,p as o,F as l,e as p,o as a,y as i,t as n}from"./index-Bn2suzCy.js";const x={class:"p-6 space-y-6"},m={class:"flex justify-between items-center mb-2"},u={class:"text-base font-semibold text-gray-800"},g={class:"bg-gray-100 px-1 py-0.5 rounded text-sm"},_={key:0,class:"text-sm text-gray-500 ml-1"},y={key:0,class:"text-xs text-gray-500"},k={class:"text-sm text-gray-700 leading-relaxed"},v=c({__name:"ApiMethods",setup(b){const d=[{name:"start",description:"初始化渲染逻辑，挂载 Marker 到地图，并监听地图的缩放/移动事件。该方法应在初始化后手动调用一次。"},{name:"clear",description:"清除所有已渲染的 Marker，并解绑地图事件，释放资源。适合组件卸载或数据清空时使用。"},{name:"update",signature:"items: T[]",returns:"void",description:"根据传入的数据集合，使用 ID 进行内容差异对比并进行增量更新（支持位置和 DOM 内容变化）。"},{name:"getMarkers",returns:"AMap.Marker[]",description:"获取当前已渲染的所有 Marker 实例（包含普通点和聚合点），可用于手动控制 Marker 或调试。"}];return(M,s)=>(a(),r("div",x,[s[1]||(s[1]=e("div",null,[e("h2",{class:"text-2xl font-bold text-gray-900 mb-2"},"📘 API 方法说明"),e("p",{class:"text-sm text-gray-600 leading-relaxed"},[o(" 调用 "),e("code",{class:"px-1 py-0.5 bg-gray-100 text-sm rounded text-blue-600"},"useBatchMarker(map, options)"),o(" 方法后，返回一个控制器对象， 你可以通过该对象调用以下方法来控制 Marker 渲染与更新流程： ")])],-1)),(a(),r(l,null,p(d,t=>e("div",{key:t.name,class:"border rounded-md p-4 bg-white shadow-sm"},[e("div",m,[e("div",u,[e("code",g,n(t.name),1),t.signature?(a(),r("span",_,"("+n(t.signature)+")",1)):i("",!0)]),t.returns?(a(),r("div",y,[s[0]||(s[0]=o(" 返回值：")),e("code",null,n(t.returns),1)])):i("",!0)]),e("p",k,n(t.description),1)])),64))]))}});export{v as default};
